<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Ubuntu配置Android SDK并使用Cordova</title>
    <link href="/2024/04/06/Ubuntu%E9%85%8D%E7%BD%AEAndroid-SDK%E5%B9%B6%E4%BD%BF%E7%94%A8Cordova/"/>
    <url>/2024/04/06/Ubuntu%E9%85%8D%E7%BD%AEAndroid-SDK%E5%B9%B6%E4%BD%BF%E7%94%A8Cordova/</url>
    
    <content type="html"><![CDATA[<p>在Ubuntu 20.04.6 LTS上配置Android SDK，并使用Cordova打包Android App</p><p>这里使用Github的Codespace</p><p><del>用Goorm IDE发现存储空间不够，在Codespace上又重装了一遍</del></p><h3 id="配置Cordova"><a href="#配置Cordova" class="headerlink" title="配置Cordova"></a>配置Cordova</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>npm install cordova -g<br>npm update cordova -g<br>cordova create &lt;文件夹名&gt; &lt;包名&gt; &lt;软件名&gt;<br><span class="hljs-built_in">cd</span> &lt;文件夹名&gt;<br>cordova platform add android --save<br></code></pre></td></tr></table></figure><p>预览命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cordova serve<br></code></pre></td></tr></table></figure><h3 id="配置JDK"><a href="#配置JDK" class="headerlink" title="配置JDK"></a>配置JDK</h3><p>Codespace自带JDK 21，但是好像有bug，JDK 17能正常使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install openjdk-17-jdk<br></code></pre></td></tr></table></figure><p>安装JDK 17后需要设置JDK的环境变量，不然就是用的JDK 21的环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/sdkman/candidates/java/17.0.10-ms  <span class="hljs-comment">#jdk17的位置</span><br></code></pre></td></tr></table></figure><h3 id="配置Android-SDK"><a href="#配置Android-SDK" class="headerlink" title="配置Android SDK"></a>配置Android SDK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip<br>unzip commandlinetools-linux-11076708_latest.zip<br></code></pre></td></tr></table></figure><p>添加环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br></code></pre></td></tr></table></figure><p>在<code>.bashrc</code>中添加下面三行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> ANDROID_SDK_ROOT=/path/to/your/sdk  <span class="hljs-comment">#你的sdk位置</span><br><span class="hljs-built_in">export</span> ANDROID_HOME=<span class="hljs-variable">$ANDROID_SDK_ROOT</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$ANDROID_SDK_ROOT</span>/bin<br></code></pre></td></tr></table></figure><p>重新打开终端，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sdkmanager <span class="hljs-string">&quot;platform-tools&quot;</span> <span class="hljs-string">&quot;platforms;android-33&quot;</span> <span class="hljs-string">&quot;build-tools;33.0.2&quot;</span> --sdk_root=<span class="hljs-variable">$ANDROID_SDK_ROOT</span><br></code></pre></td></tr></table></figure><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cordova build android<br></code></pre></td></tr></table></figure><h3 id="错误及解决方式"><a href="#错误及解决方式" class="headerlink" title="错误及解决方式"></a>错误及解决方式</h3><p><code>Error: LinkageError occurred while loading main class com.android.sdklib.tool.sdkmanager.SdkManagerCli        java.lang.UnsupportedClassVersionError: com/android/sdklib/tool/sdkmanager/SdkManagerCli has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 55.0</code></p><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sdkmanager <span class="hljs-string">&quot;build-tools;33.0.2&quot;</span> --sdk_root=<span class="hljs-variable">$ANDROID_SDK_ROOT</span><br></code></pre></td></tr></table></figure><p><code>Could not open settings generic class cache for settings file &#39;/workspaces/android/app/platforms/android/settings.gradle&#39; (/home/codespace/.gradle/caches/7.6/scripts/dqjrgsw17c62wbpoagod92e1e). &gt; BUG! exception in phase &#39;semantic analysis&#39; in source unit &#39;_BuildScript_&#39; Unsupported class file major version 65</code></p><p>解决方法：</p><p>将<code>$JAVA_HOME</code>设置为JDK 17的目录</p><p><code>Execution failed for task &#39;:app:mergeLibDexDebug&#39;. &gt; Could not resolve all files for configuration &#39;:app:debugRuntimeClasspath&#39;.   &gt; Failed to transform debug (project :CordovaLib) to match attributes &#123;artifactType=android-dex, asm-transformed-variant=NONE, com.android.build.api.attributes.AgpVersionAttr=7.4.2, com.android.build.api.attributes.BuildTypeAttr=debug, com.android.build.gradle.internal.attributes.VariantAttr=debug, dexing-enable-desugaring=true, dexing-enable-jacoco-instrumentation=false, dexing-is-debuggable=true, dexing-min-sdk=24, org.gradle.libraryelements=classes, org.gradle.usage=java-runtime&#125;.      &gt; Execution failed for DexingNoClasspathTransform: /workspaces/android/app/platforms/android/CordovaLib/build/intermediates/runtime_library_classes_dir/debug.         &gt; Error while dexing.</code></p><p>解决办法：</p><p><del>解决上面两个就没这个了</del></p>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>Android</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用Toga制作奇怪的安卓App</title>
    <link href="/2024/03/22/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Toga%E5%88%B6%E4%BD%9C%E5%A5%87%E6%80%AA%E7%9A%84%E5%AE%89%E5%8D%93App/"/>
    <url>/2024/03/22/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Toga%E5%88%B6%E4%BD%9C%E5%A5%87%E6%80%AA%E7%9A%84%E5%AE%89%E5%8D%93App/</url>
    
    <content type="html"><![CDATA[<p>使用Python的Toga框架，快速制作一些”奇怪的”安卓App</p><p><del>比如给某位幸运的同学做个 同城约*</del>  <del>哈哈哈哈</del></p><h4 id="安装框架"><a href="#安装框架" class="headerlink" title="安装框架"></a>安装框架</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install briefcase<br></code></pre></td></tr></table></figure><h4 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">briefcase new<br></code></pre></td></tr></table></figure><h4 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h4><p>在<code>src</code>目录中找到<code>app.py</code>，这里给一个插入图片的示例，图片文件要放在<code>src/应用名/resources</code>目录下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> toga<br><span class="hljs-keyword">from</span> toga.style <span class="hljs-keyword">import</span> Pack<br><span class="hljs-keyword">from</span> toga.style.pack <span class="hljs-keyword">import</span> COLUMN<br><span class="hljs-keyword">from</span> toga.images <span class="hljs-keyword">import</span> Image<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyApp</span>(toga.App):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">startup</span>(<span class="hljs-params">self</span>):<br>        main_box = toga.Box(style=Pack(direction=COLUMN))<br><br>        image = Image(<span class="hljs-string">&#x27;./resources/hi.jpg&#x27;</span>)<br>        image_view = toga.ImageView(image, style=Pack(flex=<span class="hljs-number">1</span>))<br>        main_box.add(image_view)<br><br>        self.main_window = toga.MainWindow(title=self.formal_name)<br>        self.main_window.content = main_box<br>        self.main_window.show()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-keyword">return</span> MyApp()<br></code></pre></td></tr></table></figure><h4 id="打包Apk"><a href="#打包Apk" class="headerlink" title="打包Apk"></a>打包Apk</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">briefcase create android<br>briefcase build android<br></code></pre></td></tr></table></figure><p>到这里会打包一个Apk，这个时候就可以安装了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">briefcase package android<br></code></pre></td></tr></table></figure><p>上面这个命令会生成一个<code>.aab</code>文件，个人感觉没什么用</p><h4 id="发给某幸运儿"><a href="#发给某幸运儿" class="headerlink" title="发给某幸运儿"></a><del>发给某幸运儿</del></h4><p><del>然后就被骂了哈哈哈哈哈哈</del></p><p>这里还有一个展示html页面的代码，Windows11测试通过，安卓没试过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> toga<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyApp</span>(toga.App):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">startup</span>(<span class="hljs-params">self</span>):<br>        webview = toga.WebView()<br>        web=<span class="hljs-string">r&quot;&quot;&quot;&lt;h1&gt;这里放你的html内容&lt;/h1&gt;&quot;&quot;&quot;</span><br>        webview.set_content(<span class="hljs-string">&quot;example.com&quot;</span>, web)<br><br>        self.main_window = toga.MainWindow(title=self.formal_name)<br>        self.main_window.content = webview<br>        self.main_window.show()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-keyword">return</span> MyApp()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Python</tag>
      
      <tag>Toga</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Deno Deploy的妙用</title>
    <link href="/2024/03/09/Deno-Deploy%E7%9A%84%E5%A6%99%E7%94%A8/"/>
    <url>/2024/03/09/Deno-Deploy%E7%9A%84%E5%A6%99%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="搭建Hexo博客"><a href="#搭建Hexo博客" class="headerlink" title="搭建Hexo博客"></a>搭建Hexo博客</h2><p>默认分配一个<code>project_name.deno.dev</code>域名，速度还可以</p><p>类似Cloudflare Pages</p><p>需要准备一个GitHub账号，使用GitHub登陆<a href="https://dash.deno.com/signin">Deno</a></p><ol><li><p>Deno Deploy中新建一个<code>Project</code>，选择<code>Create an empty project</code></p><p>如果找不到<code>Create an empty project</code>，这里有链接：<a href="https://dash.deno.com/new">New Project - Deploy (deno.com)</a></p><p><img src="/img/20240309/denop.png" alt="project"></p></li><li><p>在博客的GitHub仓库中新建一个workflow，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> <span class="hljs-string">gh-pages</span>  <span class="hljs-comment"># 根据需要设置触发条件</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Clone</span> <span class="hljs-string">repository</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v4</span><br>        <span class="hljs-attr">with:</span> <br>          <span class="hljs-attr">ref:</span> <span class="hljs-string">&#x27;gh-pages&#x27;</span>  <span class="hljs-comment"># 根据需要修改为你的分支名</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Deno</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">denoland/setup-deno@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">deno-version:</span> <span class="hljs-string">v1.x</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">deployctl</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">&quot;deno install --allow-all --no-check -r -f https://deno.land/x/deploy/deployctl.ts&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">to</span> <span class="hljs-string">Deno</span> <span class="hljs-string">Deploy</span><br>        <span class="hljs-attr">env:</span> <br>          <span class="hljs-attr">DENO_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.DENO_TOKEN</span> <span class="hljs-string">&#125;&#125;</span>  <span class="hljs-comment"># 使用设置的secrets名</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">&quot;DENO_DEPLOY_TOKEN=$DENO_TOKEN deployctl deploy --prod --project=&lt;project_name&gt; https://deno.land/std@0.208.0/http/file_server.ts&quot;</span>  <span class="hljs-comment"># 将&lt;project_name&gt;替换为你在Deno新建的项目名</span><br></code></pre></td></tr></table></figure></li><li><p>在<a href="https://dash.deno.com/account#access-tokens">https://dash.deno.com/account#access-tokens</a>生成一个Access Token，添加进博客GitHub仓库的secrets中，名字可以用上面的<code>DENO_TOKEN</code>（也可以用别的名字）</p></li></ol><h2 id="访问量统计"><a href="#访问量统计" class="headerlink" title="访问量统计"></a>访问量统计</h2><p>使用Deno KV实现了一个类似不蒜子计数的功能</p><h6 id="Deno-Deploy端的配置"><a href="#Deno-Deploy端的配置" class="headerlink" title="Deno Deploy端的配置"></a>Deno Deploy端的配置</h6><p>需要确保Deno KV中已经有<code>user</code>和<code>new</code>两组数据，没有可以先创建出来</p><p>新建一个Playground，代码如下（请替换<code>url_set</code>的内容）</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Hash</span>, encode &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;https://deno.land/x/checksum@1.2.0/mod.ts&quot;</span>;<br><span class="hljs-keyword">const</span> kv = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Deno</span>.<span class="hljs-title function_">openKv</span>();<br><span class="hljs-keyword">const</span> url_set = [<span class="hljs-string">&#x27;这里替换为该Deploy项目的地址&#x27;</span>, <span class="hljs-string">&#x27;后面这几个是你的网站地址(可以只填一个)&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>]<br><br><span class="hljs-title class_">Deno</span>.<span class="hljs-title function_">serve</span>(<span class="hljs-keyword">async</span> (<span class="hljs-attr">request</span>: <span class="hljs-title class_">Request</span>, <span class="hljs-attr">info</span>: <span class="hljs-title class_">Deno</span>.<span class="hljs-property">ServeHandlerInfo</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (request.<span class="hljs-property">url</span> != url_set[<span class="hljs-number">0</span>]+<span class="hljs-string">&#x27;/&#x27;</span> &amp;&amp; request.<span class="hljs-property">url</span> != url_set[<span class="hljs-number">0</span>]) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">&#x27;403 Forbidden&#x27;</span>,&#123;<span class="hljs-attr">status</span>: <span class="hljs-number">403</span>&#125;);<br>  &#125;<br>  <span class="hljs-keyword">var</span> flag;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> pair <span class="hljs-keyword">of</span> request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">entries</span>()) &#123;<br>    <span class="hljs-keyword">if</span> (pair[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;referer&#x27;</span>) &#123;<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> url <span class="hljs-keyword">of</span> url_set) &#123;<br>        <span class="hljs-keyword">if</span> (pair[<span class="hljs-number">1</span>].<span class="hljs-title function_">includes</span>(url)) &#123;<br>          <span class="hljs-keyword">var</span> h = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Headers</span>();<br>          h.<span class="hljs-title function_">append</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, url);<br>          flag = <span class="hljs-literal">true</span>;<br>          <span class="hljs-keyword">break</span>;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (!flag) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">&#x27;403 Forbidden&#x27;</span>,&#123;<span class="hljs-attr">status</span>: <span class="hljs-number">403</span>&#125;);<br>  &#125;<br><br>  <span class="hljs-keyword">await</span> kv.<span class="hljs-title function_">atomic</span>().<span class="hljs-title function_">sum</span>([<span class="hljs-string">&quot;visitors&quot;</span>], <span class="hljs-number">1n</span>).<span class="hljs-title function_">commit</span>();<br>  <span class="hljs-keyword">const</span> count = <span class="hljs-keyword">await</span> kv.<span class="hljs-title function_">get</span>([<span class="hljs-string">&quot;visitors&quot;</span>]);<br><br>  <span class="hljs-keyword">const</span> ip = info.<span class="hljs-property">remoteAddr</span>.<span class="hljs-property">hostname</span>;<br>  <span class="hljs-keyword">const</span> ip_md5 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hash</span>(<span class="hljs-string">&quot;md5&quot;</span>).<span class="hljs-title function_">digest</span>(<span class="hljs-title function_">encode</span>(ip)).<span class="hljs-title function_">hex</span>();<br><br>  <span class="hljs-keyword">const</span> user_array = <span class="hljs-keyword">await</span> kv.<span class="hljs-title function_">get</span>([<span class="hljs-string">&quot;user&quot;</span>]);<br>  <span class="hljs-keyword">if</span> (user_array.<span class="hljs-property">value</span>.<span class="hljs-title function_">indexOf</span>(ip_md5) == -<span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-keyword">const</span> ex_array = user_array.<span class="hljs-property">value</span>.<span class="hljs-title function_">concat</span>(ip_md5)<br>    <span class="hljs-keyword">await</span> kv.<span class="hljs-title function_">set</span>([<span class="hljs-string">&quot;user&quot;</span>], ex_array)<br>    <span class="hljs-keyword">await</span> kv.<span class="hljs-title function_">atomic</span>().<span class="hljs-title function_">sum</span>([<span class="hljs-string">&quot;new&quot;</span>], <span class="hljs-number">1n</span>).<span class="hljs-title function_">commit</span>();<br>  &#125;<br>  <span class="hljs-keyword">const</span> pv = <span class="hljs-keyword">await</span> kv.<span class="hljs-title function_">get</span>([<span class="hljs-string">&quot;new&quot;</span>]);<br><br>  <span class="hljs-keyword">const</span> result = <span class="hljs-string">`\&#123;&quot;uv&quot;: <span class="hljs-subst">$&#123;count.value&#125;</span>, &quot;pv&quot;:<span class="hljs-subst">$&#123;pv.value&#125;</span>\&#125;`</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(result, &#123;<span class="hljs-attr">headers</span>: h&#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h6 id="前端的配置"><a href="#前端的配置" class="headerlink" title="前端的配置"></a>前端的配置</h6><p>html部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">总访客<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;counter_uv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>人<br>总访问量<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;counter_pv&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>次<br></code></pre></td></tr></table></figure><p>js部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;url&#x27;</span>) <span class="hljs-comment">// 将url设置为你的Deno Deploy地址</span><br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> response.<span class="hljs-title function_">json</span>()<br>    &#125;)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;counter_uv&#x27;</span>).<span class="hljs-property">innerHTML</span> = data.<span class="hljs-property">uv</span><br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;counter_pv&#x27;</span>).<span class="hljs-property">innerHTML</span> = data.<span class="hljs-property">pv</span><br>    &#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Cloudflare Pages搭建图床</title>
    <link href="/2024/02/08/%E4%BD%BF%E7%94%A8Cloudflare-Pages%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
    <url>/2024/02/08/%E4%BD%BF%E7%94%A8Cloudflare-Pages%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    
    <content type="html"><![CDATA[<blockquote><p>⚠️警告⚠️</p><p><code>pages.dev</code>域名被移动运营商污染，请谨慎使用！</p></blockquote><p>使用<code>Cloudflare Pages</code>搭建图床</p><p>除了图床也可以放各种各样的文件</p><p>限制：</p><ul><li><p>最多100个<code>pages.dev</code>域名</p></li><li><p>每月最多部署500次</p></li><li><p>每个<code>Cloudflare Pages</code>最多20000个文件，单个文件最大<code>25 MiB</code></p></li></ul><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><ol><li><p>新建Git仓库，上传你的文件</p><p>在仓库根目录中新建一个<code>_headers</code>文件，内容如下</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">/*<br>  <span class="hljs-keyword">Access</span>-Control-Allow-Origin: *<br></code></pre></td></tr></table></figure><p>注意：最好把<code>Access-Control-Allow-Origin: *</code>中的<code>*</code>替换为你的网站URL</p><p>不替换就是所有人都能跨域访问</p></li><li><p>新建一个<code>Cloudflare Pages</code>，选择上面仓库的某个分支并部署</p><p>此时你就得到了一个图床</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Cloudflare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo ParticleX及Diaspora主题使用Artitalk</title>
    <link href="/2024/02/02/Hexo-ParticleX%E5%8F%8ADiaspora%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8Artitalk/"/>
    <url>/2024/02/02/Hexo-ParticleX%E5%8F%8ADiaspora%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8Artitalk/</url>
    
    <content type="html"><![CDATA[<p><code>Hexo Particle</code>X和<code>Hexo Diaspora</code>主题，如果使用<code>hexo new page &lt;页面名&gt; </code>，并在生成的<code>.md</code>文件配置Artitalk的代码，会出现奇怪的Bug</p><p>请教ChatGPT之后用下面的代码可以使用Artitalk</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;DOMContentLoaded&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 找到class为content的div标签</span><br>    <span class="hljs-keyword">var</span> contentDiv = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.content&#x27;</span>);<br><br>    <span class="hljs-comment">// 动态创建div标签用于Artitalk</span><br>    <span class="hljs-keyword">var</span> artitalkDiv = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>);<br>    artitalkDiv.<span class="hljs-property">id</span> = <span class="hljs-string">&#x27;artitalk_main&#x27;</span>; <span class="hljs-comment">// 设置ID为artitalk_main</span><br>    contentDiv.<span class="hljs-title function_">appendChild</span>(artitalkDiv); <span class="hljs-comment">// 将新创建的div添加到class为content的div内</span><br><br>    <span class="hljs-comment">// 创建script标签</span><br>    <span class="hljs-keyword">var</span> script = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>);<br>    script.<span class="hljs-property">type</span> = <span class="hljs-string">&#x27;text/javascript&#x27;</span>;<br>    script.<span class="hljs-property">src</span> = <span class="hljs-string">&#x27;https://cdn.staticfile.org/artitalk/3.3.4/js/artitalk.js&#x27;</span>;<br><br>    <span class="hljs-comment">// 当脚本加载完成后初始化Artitalk</span><br>    script.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-comment">// 确保Artitalk已加载</span><br>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Artitalk</span> !== <span class="hljs-string">&#x27;undefined&#x27;</span>) &#123;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Artitalk</span>(&#123;<br>          <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;你的appId&#x27;</span>,<br>          <span class="hljs-attr">appKey</span>: <span class="hljs-string">&#x27;你的appKey&#x27;</span>,<br>          <span class="hljs-attr">serverURL</span>: <span class="hljs-string">&#x27;你的serverURL&#x27;</span>,<br>          <span class="hljs-attr">color1</span>: <span class="hljs-string">&#x27;#8DC9D3&#x27;</span>,<br>          <span class="hljs-attr">color2</span>: <span class="hljs-string">&#x27;#FFBFD7&#x27;</span>,<br>        &#125;);<br>      &#125;<br>    &#125;;<br><br>    <span class="hljs-comment">// 将script标签添加到body中（也可以根据需要添加到head中）</span><br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(script);<br>  &#125;);<br>&#125;)();<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>把这些添加进生成的<code>index.md</code>文件中</p><p>这里是把Artitalk添加进<code>&lt;div class=&quot;content&quot;&gt;</code>内，可以根据需要改变class名</p><p>在Diaspora主题上有Bug，需要刷新页面才能显示Artitalk，暂时没想到怎么解决</p>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo ParticleX添加Valine评论</title>
    <link href="/2024/01/21/Hexo-ParticleX%E6%B7%BB%E5%8A%A0Valine%E8%AF%84%E8%AE%BA/"/>
    <url>/2024/01/21/Hexo-ParticleX%E6%B7%BB%E5%8A%A0Valine%E8%AF%84%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<ol><li>在<code>themes\particlex\layout\comment.ejs</code>的最后添加以下代码：(可使用CDN)</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;% if (theme.valine.enable) &#123; %&gt;<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/valine/1.5.1/Valine.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Valine</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-comment">// 请使用你自己的设置</span></span><br><span class="language-javascript">        <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#vcomments&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">appId</span>: <span class="hljs-string">&#x27;&lt;%- theme.valine.appId %&gt;&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">appKey</span>: <span class="hljs-string">&#x27;&lt;%- theme.valine.appKey %&gt;&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">avatar</span>: <span class="hljs-string">&#x27;mp&#x27;</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">path</span>: <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">serverURLs</span>: <span class="hljs-string">&#x27;&lt;%- theme.valine.serverURLs %&gt;&#x27;</span>,</span><br><span class="language-javascript">        &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure><ol start="2"><li><p>从<code>themes\particlex\layout\post.ejs</code>的倒数第三行开始加入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;% if (theme.valine.enable) &#123; %&gt;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;comment&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;vcomments&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure></li><li><p>在<code>themes\particlex\_config.yml</code>加入Valine的配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Valine</span><br><span class="hljs-attr">valine:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">appId:</span> <span class="hljs-comment"># 你的appId</span><br>    <span class="hljs-attr">appKey:</span> <span class="hljs-comment"># 你的appKey</span><br>    <span class="hljs-attr">serverURLs:</span> <span class="hljs-comment"># 你的serverURLs</span><br></code></pre></td></tr></table></figure></li></ol><p>所以ParticleX为什么不支持Valine<br>高亮好像不支持ejs所以代码块上写的html</p>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Github Actions自动切换网站主题</title>
    <link href="/2024/01/21/%E4%BD%BF%E7%94%A8Github-Actions%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2%E7%BD%91%E7%AB%99%E4%B8%BB%E9%A2%98/"/>
    <url>/2024/01/21/%E4%BD%BF%E7%94%A8Github-Actions%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2%E7%BD%91%E7%AB%99%E4%B8%BB%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<blockquote><p>现在网站用了六套主题，周一用Diaspora，周二和周日用ShokaX，周三和周六用Particlex，周四用Stellaris，周五用Fluid，里站用Brewski，可喜可贺</p></blockquote><p>使用<code>Github Actions</code>实现每天自动切换网站的主题</p><p>比如周一、三、五、七使用<code>theme-A</code>，二、四、六使用<code>theme-B</code></p><p>当然也可以添加<code>theme-C</code>、<code>theme-D</code>…</p><ol><li><p>在<code>用户名.github.io</code>仓库中有两个文件夹<code>theme-A/</code>和<code>theme-B/</code>，用于存放两套主题的静态文件</p></li><li><p>在GitHub的 Settings -&gt; Developer Settings -&gt; Personal access tokens -&gt; Tokens (classic) (<a href="https://github.com/settings/tokens/new">链接</a>)生成一个token，填写Note，勾选<code>repo</code>和<code>workflow</code>然后生成</p><p><img src="/img/20240121/token.png" alt="token"></p></li><li><p>在仓库的 Settings -&gt; Secrets and variables -&gt; Actions 添加刚才的token</p><p><img src="/img/20240121/secret.png" alt="secret"></p></li><li><p>在GitHub仓库中新建<code>.github/workflows</code>，新建一个<code>.yaml</code>文件，文件名随意；可以先点<code>Run workflow</code>把静态文件部署到<code>gh-pages</code>分支</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Update</span> <span class="hljs-string">Blog</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br>  <span class="hljs-attr">schedule:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">cron:</span> <span class="hljs-string">&quot;0 2 * * *&quot;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">update:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">code</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v4</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Determine</span> <span class="hljs-string">Deployment</span> <span class="hljs-string">Directory</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">determine_directory</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          day_of_week=$(date +&#x27;%u&#x27;)</span><br><span class="hljs-string">          if [ $((day_of_week % 2)) -eq 0 ]; then</span><br><span class="hljs-string">          echo &quot;::set-output name=directory::theme-B/&quot;</span><br><span class="hljs-string">            else</span><br><span class="hljs-string">          echo &quot;::set-output name=directory::theme-A/&quot;</span><br><span class="hljs-string">          fi</span><br><span class="hljs-string"></span>          <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Get</span> <span class="hljs-string">Current</span> <span class="hljs-string">Time</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">current_time</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;::set-output name=time::$(date +&#x27;%Y-%m-%d %H:%M:%S&#x27;)&quot;</span><br><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3.9.3</span> <span class="hljs-comment"># 使用部署到 GitHub pages 的 action</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">publish_dir:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.determine_directory.outputs.directory</span> <span class="hljs-string">&#125;&#125;</span> <br>          <span class="hljs-attr">github_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.DEPLOY_SECRET</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment"># secret 名</span><br>          <span class="hljs-attr">user_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.MY_USER_NAME</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">user_email:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.MY_USER_EMAIL</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">commit_message:</span> <span class="hljs-string">&quot;Automated Deployment at $<span class="hljs-template-variable">&#123;&#123; steps.current_time.outputs.time &#125;&#125;</span>&quot;</span> <span class="hljs-comment"># 在 commit message 中添加当前时间</span><br></code></pre></td></tr></table></figure><ol start="5"><li>在仓库的 Settings -&gt; Pages 设置<code>Build and deployment</code>的<code>Source</code>为<code>Deploy from a branch</code>，选择<code>gh-pages</code>分支，此时GitHub Pages将开始部署</li></ol><p><del>总之就挺神经病的</del></p><p><del>写的方法我自己都看不懂</del></p><p><del>感谢ChatGPT提供的GitHub Actions的源码</del></p>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>生日快乐</title>
    <link href="/2023/12/15/%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/"/>
    <url>/2023/12/15/%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/</url>
    
    <content type="html"><![CDATA[<p>生日快乐，我的15岁</p><p>许个愿——当然不能说出来啦！</p><p><code>12/15/2023</code></p><p><img src="/img/myicon.jpg" alt="birthday"></p>]]></content>
    
    
    
    <tags>
      
      <tag>birthday</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>姐姐♡喜欢</title>
    <link href="/2023/11/26/%E5%A7%90%E5%A7%90%E2%99%A1%E5%96%9C%E6%AC%A2/"/>
    <url>/2023/11/26/%E5%A7%90%E5%A7%90%E2%99%A1%E5%96%9C%E6%AC%A2/</url>
    
    <content type="html"><![CDATA[<p>好喜欢姐姐  </p><p>想给姐姐生孩子  </p><p>人家就是好喜欢被姐姐控制的感觉呜呜呜</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>女生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid添加一言及出处</title>
    <link href="/2023/11/26/Hexo-Fluid%E6%B7%BB%E5%8A%A0%E4%B8%80%E8%A8%80%E5%8F%8A%E5%87%BA%E5%A4%84/"/>
    <url>/2023/11/26/Hexo-Fluid%E6%B7%BB%E5%8A%A0%E4%B8%80%E8%A8%80%E5%8F%8A%E5%87%BA%E5%A4%84/</url>
    
    <content type="html"><![CDATA[<p>原版只能显示<code>hitokoto</code>(正文)部分，不能显示<code>from</code>(出处)部分</p><ol><li>修改<code>themes\fluid\layout\_partials\plugins\typed.ejs</code>替换为如下内容  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;% <span class="hljs-keyword">if</span>(theme.<span class="hljs-property">fun_features</span>.<span class="hljs-property">typing</span>.<span class="hljs-property">enable</span> &amp;&amp; <span class="hljs-title function_">in_scope</span>(theme.<span class="hljs-property">fun_features</span>.<span class="hljs-property">typing</span>.<span class="hljs-property">scope</span>) &amp;&amp; page.<span class="hljs-property">subtitle</span> !== <span class="hljs-literal">false</span>) &#123; %&gt;<br>  &lt;%- <span class="hljs-title function_">js_ex</span>(theme.<span class="hljs-property">static_prefix</span>.<span class="hljs-property">typed</span>, <span class="hljs-string">&#x27;/typed.min.js&#x27;</span>) %&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">    (<span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable language_">window</span>, <span class="hljs-variable language_">document</span></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> typing = <span class="hljs-title class_">Fluid</span>.<span class="hljs-property">plugins</span>.<span class="hljs-property">typing</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> subtitle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;subtitle&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (!subtitle || !typing) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span>;</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">var</span> text;</span></span><br><span class="language-javascript"><span class="language-xml">      &lt;% <span class="hljs-keyword">if</span> (<span class="hljs-title function_">is_home</span>() &amp;&amp; theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span> &amp;&amp; theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">enable</span>) &#123; %&gt;</span></span><br><span class="language-javascript"><span class="language-xml">        jQuery.<span class="hljs-title function_">ajax</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;&lt;%= theme.index.slogan.api.method %&gt;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;&lt;%- theme.index.slogan.api.url %&gt;&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">headers</span>: &lt;%- <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">headers</span> || &#123;&#125;) %&gt;,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">dataType</span>: <span class="hljs-string">&#x27;json&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">result</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">var</span> apiText;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">if</span> (result) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-keyword">var</span> keys = <span class="hljs-string">&#x27;&lt;%= theme.index.slogan.api.keys %&gt;&#x27;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;,&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-keyword">if</span> (result <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Array</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                result = result[<span class="hljs-number">0</span>];</span></span><br><span class="language-javascript"><span class="language-xml">              &#125;</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> k <span class="hljs-keyword">of</span> keys) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-keyword">var</span> value = result[k];</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> value === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                  apiText = value;</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-keyword">break</span>;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (value <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Object</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                  result = value;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;</span></span><br><span class="language-javascript"><span class="language-xml">              &#125;</span></span><br><span class="language-javascript"><span class="language-xml">              text = apiText ? (result.&lt;%= theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">keys</span> %&gt; + <span class="hljs-string">&#x27; - &#x27;</span> + result.&lt;%= theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">keys2</span> %&gt;) : (result.&lt;%= theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">keys</span> %&gt; + <span class="hljs-string">&#x27; - &#x27;</span> + result.&lt;%= theme.<span class="hljs-property">index</span>.<span class="hljs-property">slogan</span>.<span class="hljs-property">api</span>.<span class="hljs-property">keys2</span> %&gt;);</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">typing</span>(text);</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">error</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">xhr, status, error</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">if</span> (error) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Failed to request &lt;%= theme.index.slogan.api.url %&gt;:&#x27;</span>, error);</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title function_">typing</span>(text);</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">      &lt;% &#125; <span class="hljs-keyword">else</span> &#123; %&gt;</span></span><br><span class="language-javascript"><span class="language-xml">        text = subtitle.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;data-typed-text&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">typing</span>(text);</span></span><br><span class="language-javascript"><span class="language-xml">      &lt;% &#125; %&gt;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;)(<span class="hljs-variable language_">window</span>, <span class="hljs-variable language_">document</span>);</span></span><br><span class="language-javascript"><span class="language-xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&lt;% &#125; %&gt;<br></code></pre></td></tr></table></figure></li><li>修改<code>_config.fluid.yml</code><br>添加<code>keys2</code>用于控制出处的取值<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, 则取值字段为 [&#x27;data&#x27;, &#x27;content&#x27;]；如果返回是列表则自动选择第一项</span><br><span class="hljs-comment"># The value field of the string obtained from the response. For example, the response content is &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, the expected `keys: [&#x27;data&#x27;,&#x27;content&#x27;]`; if the return is a list, the first item is automatically selected</span><br><span class="hljs-attr">keys:</span> [<span class="hljs-string">&#x27;hitokoto&#x27;</span>]<br><span class="hljs-attr">keys2:</span> [<span class="hljs-string">&#x27;from&#x27;</span>]<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>少女的人设</title>
    <link href="/2023/11/05/%E5%B0%91%E5%A5%B3%E7%9A%84%E4%BA%BA%E8%AE%BE/"/>
    <url>/2023/11/05/%E5%B0%91%E5%A5%B3%E7%9A%84%E4%BA%BA%E8%AE%BE/</url>
    
    <content type="html"><![CDATA[<ul><li>姓名: 少女  </li><li>性别: 女  </li><li>年龄: 16  </li><li>身高: 159.5cm  </li><li>体重: <span class="heimu">女孩子的体重是秘密!!</span>  </li><li>胸围: 95D  </li><li>生日: 2007.08.31  </li><li>喜欢的人&#x2F;物: 初音未来&amp;&amp;美少女&amp;&amp;Python  <div style="text-align:center;"><p><del>才，才不是为了你才特意写的自我介绍啦</del></p><p><strong>世界第一可爱美少女</strong></p></div></li></ul>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>女生</tag>
      
      <tag>人设</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>想穿Lolita</title>
    <link href="/2023/10/26/%E6%83%B3%E7%A9%BFLolita/"/>
    <url>/2023/10/26/%E6%83%B3%E7%A9%BFLolita/</url>
    
    <content type="html"><![CDATA[<p>我想穿lolita<br>但是lolita好贵 买不起</p><p>我不穿lolita也很可爱</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>女生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>谁能帮我找个女朋友</title>
    <link href="/2023/10/14/%E8%B0%81%E8%83%BD%E5%B8%AE%E6%88%91%E6%89%BE%E4%B8%AA%E5%A5%B3%E6%9C%8B%E5%8F%8B/"/>
    <url>/2023/10/14/%E8%B0%81%E8%83%BD%E5%B8%AE%E6%88%91%E6%89%BE%E4%B8%AA%E5%A5%B3%E6%9C%8B%E5%8F%8B/</url>
    
    <content type="html"><![CDATA[<p>谁能帮我找个女朋友<br>要高中大姐姐</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>女生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为Hexo Fluid的文章设置网格背景</title>
    <link href="/2023/10/14/%E4%B8%BAHexo-Fluid%E7%9A%84%E6%96%87%E7%AB%A0%E8%AE%BE%E7%BD%AE%E7%BD%91%E6%A0%BC%E8%83%8C%E6%99%AF/"/>
    <url>/2023/10/14/%E4%B8%BAHexo-Fluid%E7%9A%84%E6%96%87%E7%AB%A0%E8%AE%BE%E7%BD%AE%E7%BD%91%E6%A0%BC%E8%83%8C%E6%99%AF/</url>
    
    <content type="html"><![CDATA[<p>效果图：<br><img src="/img/20231014/xiaoguo.png" alt="效果图"><br>两种方法，推荐第一种</p><h2 id="使用自定义CSS实现"><a href="#使用自定义CSS实现" class="headerlink" title="使用自定义CSS实现"></a>使用自定义CSS实现</h2><ul><li><del>代码是从<a href="https://gridzzly.com/">Gridzzly.com</a>抄的</del>  </li><li>推荐为暗色模式进行适配 <del>不然根本看不清</del></li></ul><ol><li><p>新建CSS文件(不要通过自定义CSS导入)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#board</span> &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%226mm%22%20height%3D%226mm%22%20viewPort%3D%220%200%205mm%205mm%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%3Cline%20x1%3D%220mm%22%20y1%3D%225mm%22%20x2%3D%226mm%22%20y2%3D%225mm%22%20stroke-width%3D%220.3mm%22%20stroke%3D%22%23d4d4d4%22%2F%3E%20%3Cline%20x1%3D%225mm%22%20y1%3D%220mm%22%20x2%3D%225mm%22%20y2%3D%226mm%22%20stroke-width%3D%220.3mm%22%20stroke%3D%22%23d4d4d4%22%2F%3E%20%3C%2Fsvg%3E&quot;</span>);<br>    <span class="hljs-attribute">background-position</span>: <span class="hljs-number">2px</span> <span class="hljs-number">2px</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>引入CSS  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;custom-css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/css/divback.css&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>建议通过Hexo注入器进行引入</p></li><li><p>修改<code>Blog\themes\fluid\layout\_partials\header\navigation.ejs</code> 目前是第62行，为了给a标签绑定<code>onclick=&quot;toggleCSS()&quot;</code></p><figure class="highlight html"><figcaption><span>navigation.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_self&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;javascript:;&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Color Toggle&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;toggleCSS()&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>导入自定义js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">toggleCSS</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">var</span> linkElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;custom-css&quot;</span>);<br>      <span class="hljs-keyword">if</span> (linkElement.<span class="hljs-property">disabled</span>) &#123;<br>        linkElement.<span class="hljs-property">disabled</span> = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 启用CSS文件</span><br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        linkElement.<span class="hljs-property">disabled</span> = <span class="hljs-literal">true</span>; <span class="hljs-comment">// 禁用CSS文件</span><br>      &#125;<br>    &#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="使用Pattern-css实现"><a href="#使用Pattern-css实现" class="headerlink" title="使用Pattern.css实现"></a>使用Pattern.css实现</h2><ol><li><p>在<code>layout.ejs</code>引入<code>Pattern.css</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://unpkg.com/pattern.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>将<code>layout.ejs</code>和<code>post.ejs</code>两个文件中的<code>&lt;div id=&quot;board&quot;</code>(没有向右的尖括号)改为<code>&lt;div id=&quot;board&quot; class=&quot;pattern-dots-xl&quot;</code>(以.pattern-dots-xl为例，可以自己修改class的内容)</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Code</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>魔改Hexo Fluid</title>
    <link href="/2023/10/05/%E9%AD%94%E6%94%B9Hexo-Fluid/"/>
    <url>/2023/10/05/%E9%AD%94%E6%94%B9Hexo-Fluid/</url>
    
    <content type="html"><![CDATA[<p>整理一下本少女在使用hexo fluid时用到的代码  </p><h2 id="视频Banner"><a href="#视频Banner" class="headerlink" title="视频Banner"></a>视频Banner</h2><p>将<code>themes/fluid/layout/_partials/header/banner.ejs</code>修改为以下内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;%<br>var banner_img = page.banner_img || theme.index.banner_img<br>var banner_img_height = parseFloat(page.banner_img_height || theme.index.banner_img_height)<br>var banner_mask_alpha = parseFloat(page.banner_mask_alpha || theme.index.banner_mask_alpha)<br>var subtitle = page.subtitle || page.title<br>%&gt;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;banner&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;banner&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: url(&#x27;&lt;%- url_for(banner_img) %&gt;&#x27;) no-repeat center center; background-size: cover;&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">autoplay</span> <span class="hljs-attr">loop</span> <span class="hljs-attr">muted</span> <span class="hljs-attr">playsinline</span> <span class="hljs-attr">poster</span>=<span class="hljs-string">&quot;&lt;%- url_for(banner_img) %&gt;&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;[你的视频背景地址]&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/mp4&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;full-bg-img&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mask flex-center&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color: rgba(0, 0, 0, &lt;%= parseFloat(banner_mask_alpha) %&gt;)&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;banner-text text-center fade-in-up&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;h2&quot;</span>&gt;</span><br>          &lt;% if(theme.fun_features.typing.enable &amp;&amp; in_scope(theme.fun_features.typing.scope)) &#123; %&gt;<br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;subtitle&quot;</span> <span class="hljs-attr">data-typed-text</span>=<span class="hljs-string">&quot;&lt;%= subtitle %&gt;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          &lt;% &#125; else &#123; %&gt;<br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;subtitle&quot;</span>&gt;</span>&lt;%- subtitle %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>          &lt;% &#125; %&gt;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        &lt;% if (is_post()) &#123; %&gt;<br>          &lt;%- inject_point(&#x27;postMetaTop&#x27;) %&gt;<br>        &lt;% &#125; %&gt;<br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>      &lt;% if (theme.scroll_down_arrow.enable &amp;&amp; theme.scroll_down_arrow.banner_height_limit &lt;= banner_img_height &amp;&amp; page.layout !== &#x27;404&#x27;) &#123; %&gt;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;scroll-down-bar&quot;</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-arrowdown&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      &lt;% &#125; %&gt;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="添加自定义字体"><a href="#添加自定义字体" class="headerlink" title="添加自定义字体"></a>添加自定义字体</h2><ol><li>通过自定义CSS引入字体</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@font-face</span> &#123;<br>  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;FontName&#x27;</span>;  <span class="hljs-comment">/*换成你自己的字体名及路径*/</span><br>  <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;/font/font.ttf&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;truetype&#x27;</span>);<br>  <span class="hljs-attribute">font-weight</span>: normal;<br>  <span class="hljs-attribute">font-style</span>: normal;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>修改<code>Blog/_config.fluid.yml</code></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">font:</span><br>  <span class="hljs-attr">font_size:</span> <span class="hljs-string">18px</span>   <span class="hljs-comment"># 按需要自定义</span><br>  <span class="hljs-attr">font_family:</span> <span class="hljs-string">FontName</span>  <span class="hljs-comment"># 换成你自己的字体名</span><br>  <span class="hljs-attr">letter_spacing:</span> <span class="hljs-number">0.</span><span class="hljs-string">02em</span><br>  <span class="hljs-attr">code_font_size:</span> <span class="hljs-number">85</span><span class="hljs-string">%</span><br></code></pre></td></tr></table></figure><h2 id="添加网页背景图片"><a href="#添加网页背景图片" class="headerlink" title="添加网页背景图片"></a>添加网页背景图片</h2><ol><li>使用自定义CSS实现<br>用上面的方法添加自定义CSS<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/background.jpg</span>);  <span class="hljs-comment">/*换成你自己的背景图*/</span><br>  <span class="hljs-attribute">background-attachment</span>: fixed;<br>  <span class="hljs-attribute">background-size</span>: cover;  <br>&#125;<br></code></pre></td></tr></table></figure>可以使用图片的api，个人感觉会拖慢加载速度</li></ol><h2 id="复制变色"><a href="#复制变色" class="headerlink" title="复制变色"></a>复制变色</h2><p>自定义CSS添加以下内容  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-pseudo">::selection</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#66ccff</span>; <span class="hljs-comment">/* 设置选中文字的颜色 */</span><br>    <span class="hljs-attribute">background</span>: transparent; <span class="hljs-comment">/* 设置选中文字的背景为透明 */</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Banner图随网页滑动变透明"><a href="#Banner图随网页滑动变透明" class="headerlink" title="Banner图随网页滑动变透明"></a>Banner图随网页滑动变透明</h2><p>Hexo Fluid，随着网页的滑动，Banner图会逐渐变透明<br>打字机也会变透明  </p><p>自定义js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 获取图片元素</span><br><span class="hljs-keyword">var</span> image = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;banner&quot;</span>);<br><span class="hljs-keyword">var</span> targetDistance = <span class="hljs-number">695</span>; <span class="hljs-comment">// 设置滑动695px后完全透明</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;scroll&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">var</span> scrollDistance = <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageYOffset</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">scrollTop</span> || <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">var</span> opacity = <span class="hljs-number">1</span> - (scrollDistance / targetDistance);<br>  <span class="hljs-keyword">if</span>(opacity &lt; <span class="hljs-number">0</span>) &#123;<br>    opacity = <span class="hljs-number">0</span>;<br>  &#125;<br>  image.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> = opacity.<span class="hljs-title function_">toString</span>();<br>&#125;);<br></code></pre></td></tr></table></figure><p>或者根据滑动网页的百分比减少不透明度</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> image = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;banner&quot;</span>);<br><span class="hljs-keyword">var</span> pageHeight = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">scrollHeight</span> - <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>;<br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;scroll&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">var</span> scrollDistance = <span class="hljs-variable language_">window</span>.<span class="hljs-property">pageYOffset</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span> || <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">scrollTop</span> || <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">var</span> opacity = <span class="hljs-number">1</span> - (scrollDistance / pageHeight);<br>  <span class="hljs-keyword">if</span>(opacity &lt; <span class="hljs-number">0</span>) &#123;<br>    opacity = <span class="hljs-number">0</span>;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(opacity &gt; <span class="hljs-number">1</span>) &#123;<br>    opacity = <span class="hljs-number">1</span>;<br>  &#125;<br>  image.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> = opacity.<span class="hljs-title function_">toString</span>();<br>&#125;);<br></code></pre></td></tr></table></figure><p>设置banner的淡出样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#banner</span> &#123;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="文章中代码的字体及背景色"><a href="#文章中代码的字体及背景色" class="headerlink" title="文章中代码的字体及背景色"></a>文章中代码的字体及背景色</h2><p>自定义CSS添加以下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">tab-size</span>: <span class="hljs-number">4</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">251</span> <span class="hljs-number">253</span> <span class="hljs-number">83</span> / <span class="hljs-number">50%</span>);<br>    <span class="hljs-attribute">transition</span>: background-color <span class="hljs-number">0.2s</span> ease-in-out;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;FontName&quot;</span>;  <span class="hljs-comment">/*改为你自己的字体名*/</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li><code>background-color</code>用于设置背景色</li><li><code>font-family</code>用于设置字体</li></ul><h2 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h2><p>自定义CSS</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs css">::-webkit-scrollbar &#123;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">10px</span>;<br>&#125;<br><br>::-webkit-scrollbar-thumb &#123;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#e58a8a</span>;<br>    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">-webkit-linear-gradient</span>( <span class="hljs-number">45deg</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.4</span>) <span class="hljs-number">25%</span>, transparent <span class="hljs-number">25%</span>, transparent <span class="hljs-number">50%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.4</span>) <span class="hljs-number">50%</span>, <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.4</span>) <span class="hljs-number">75%</span>, transparent <span class="hljs-number">75%</span>, transparent);<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2em</span>;<br>&#125;<br><br>::-webkit-scrollbar-corner &#123;<br>    <span class="hljs-attribute">background-color</span>: transparent;<br>&#125;<br><br>::-moz-selection &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#e58a8a</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="关于Hexo-Fluid的评论"><a href="#关于Hexo-Fluid的评论" class="headerlink" title="关于Hexo Fluid的评论"></a>关于Hexo Fluid的评论</h2><p>因为出了一点Bug，本站的评论通过修改<code>Blog/themes/fluid/layout/post.ejs</code>实现。<br>将<code>post.ejs</code>中的<code>&lt;%- inject_point(&#39;postComments&#39;) %&gt;</code>替换为 你使用的评论系统 提供的html代码<br>以Utterance为例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://utteranc.es/client.js&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">repo</span>=<span class="hljs-string">&quot;用户名/仓库地址&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">issue-term</span>=<span class="hljs-string">&quot;pathname&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;github-light&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">async</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="关于网站图标"><a href="#关于网站图标" class="headerlink" title="关于网站图标"></a>关于网站图标</h2><p>在<code>_config.fluid.yml</code>设置没反应，手动将网页图标重命名为<code>favicon.ico</code>，复制到<code>public</code>文件夹下</p><h2 id="关于Valine"><a href="#关于Valine" class="headerlink" title="关于Valine"></a>关于Valine</h2><p>测试时发现LeanCloud提供的域名会屏蔽中国大陆的访问…<br>绑定自己的域名后就能正常访问…  </p><p>在LeanCloud的<code>设置-域名绑定</code>选项绑定自己的子域名，然后在子域名的DNS上设置<code>CNAME</code>记录，解析到LeanCloud提供的域名，之后配置Valine时,使用绑定的子域名  </p><p><del>不想打字了</del></p>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>资源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我想变成女生</title>
    <link href="/2023/10/05/%E6%88%91%E6%83%B3%E5%8F%98%E6%88%90%E5%A5%B3%E7%94%9F/"/>
    <url>/2023/10/05/%E6%88%91%E6%83%B3%E5%8F%98%E6%88%90%E5%A5%B3%E7%94%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="我想变成女生"><a href="#我想变成女生" class="headerlink" title="我想变成女生"></a>我想变成女生</h1><p>好想变成女生</p><p>变成女生会很可爱</p><p>为什么我不是女生，可恶</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>女生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello, World!</title>
    <link href="/2023/08/30/hello-world/"/>
    <url>/2023/08/30/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="初音ミク16岁生日快乐！！！"><a href="#初音ミク16岁生日快乐！！！" class="headerlink" title="初音ミク16岁生日快乐！！！"></a>初音ミク16岁生日快乐！！！</h1><h1 id="同时纪念少女的小站正式建成"><a href="#同时纪念少女的小站正式建成" class="headerlink" title="同时纪念少女的小站正式建成"></a>同时纪念少女的小站正式建成</h1><h1 id="2023-08-31-00-00-JST"><a href="#2023-08-31-00-00-JST" class="headerlink" title="2023.08.31 00:00 (JST)"></a>2023.08.31 00:00 (JST)</h1><p>Hello, World!</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
