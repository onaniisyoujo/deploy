<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo Fluid添加一言及出处</title>
    <url>/2023/11/26/Hexo-Fluid%E6%B7%BB%E5%8A%A0%E4%B8%80%E8%A8%80%E5%8F%8A%E5%87%BA%E5%A4%84/</url>
    <content><![CDATA[<p>原版只能显示<code>hitokoto</code>(正文)部分，不能显示<code>from</code>(出处)部分</p>
<ol>
<li>修改<code>themes\fluid\layout\_partials\plugins\typed.ejs</code>替换为如下内容  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span>(theme.<span class="property">fun_features</span>.<span class="property">typing</span>.<span class="property">enable</span> &amp;&amp; <span class="title function_">in_scope</span>(theme.<span class="property">fun_features</span>.<span class="property">typing</span>.<span class="property">scope</span>) &amp;&amp; page.<span class="property">subtitle</span> !== <span class="literal">false</span>) &#123; %&gt;</span><br><span class="line">  &lt;%- <span class="title function_">js_ex</span>(theme.<span class="property">static_prefix</span>.<span class="property">typed</span>, <span class="string">&#x27;/typed.min.js&#x27;</span>) %&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    (<span class="keyword">function</span> (<span class="params"><span class="variable language_">window</span>, <span class="variable language_">document</span></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> typing = <span class="title class_">Fluid</span>.<span class="property">plugins</span>.<span class="property">typing</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> subtitle = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;subtitle&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (!subtitle || !typing) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> text;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &lt;% <span class="keyword">if</span> (<span class="title function_">is_home</span>() &amp;&amp; theme.<span class="property">index</span>.<span class="property">slogan</span>.<span class="property">api</span> &amp;&amp; theme.<span class="property">index</span>.<span class="property">slogan</span>.<span class="property">api</span>.<span class="property">enable</span>) &#123; %&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        jQuery.<span class="title function_">ajax</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">type</span>: <span class="string">&#x27;&lt;%= theme.index.slogan.api.method %&gt;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">url</span>: <span class="string">&#x27;&lt;%- theme.index.slogan.api.url %&gt;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">headers</span>: &lt;%- <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(theme.<span class="property">index</span>.<span class="property">slogan</span>.<span class="property">api</span>.<span class="property">headers</span> || &#123;&#125;) %&gt;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> apiText;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (result) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">var</span> keys = <span class="string">&#x27;&lt;%= theme.index.slogan.api.keys %&gt;&#x27;</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">if</span> (result <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                result = result[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="keyword">for</span> (<span class="keyword">const</span> k <span class="keyword">of</span> keys) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">var</span> value = result[k];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;string&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  apiText = value;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  <span class="keyword">break</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                  result = value;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              text = apiText ? (result.&lt;%= theme.<span class="property">index</span>.<span class="property">slogan</span>.<span class="property">api</span>.<span class="property">keys</span> %&gt; + <span class="string">&#x27; - &#x27;</span> + result.&lt;%= theme.<span class="property">index</span>.<span class="property">slogan</span>.<span class="property">api</span>.<span class="property">keys2</span> %&gt;) : (result.&lt;%= theme.<span class="property">index</span>.<span class="property">slogan</span>.<span class="property">api</span>.<span class="property">keys</span> %&gt; + <span class="string">&#x27; - &#x27;</span> + result.&lt;%= theme.<span class="property">index</span>.<span class="property">slogan</span>.<span class="property">api</span>.<span class="property">keys2</span> %&gt;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">typing</span>(text);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">error</span>: <span class="keyword">function</span>(<span class="params">xhr, status, error</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (error) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to request &lt;%= theme.index.slogan.api.url %&gt;:&#x27;</span>, error);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">typing</span>(text);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &lt;% &#125; <span class="keyword">else</span> &#123; %&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        text = subtitle.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-typed-text&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">typing</span>(text);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &lt;% &#125; %&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)(<span class="variable language_">window</span>, <span class="variable language_">document</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.fluid.yml</code><br>添加<code>keys2</code>用于控制出处的取值<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, 则取值字段为 [&#x27;data&#x27;, &#x27;content&#x27;]；如果返回是列表则自动选择第一项</span></span><br><span class="line"><span class="comment"># The value field of the string obtained from the response. For example, the response content is &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, the expected `keys: [&#x27;data&#x27;,&#x27;content&#x27;]`; if the return is a list, the first item is automatically selected</span></span><br><span class="line"><span class="attr">keys:</span> [<span class="string">&#x27;hitokoto&#x27;</span>]</span><br><span class="line"><span class="attr">keys2:</span> [<span class="string">&#x27;from&#x27;</span>]</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>资源</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>fluid</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello, World!</title>
    <url>/2023/08/30/hello-world/</url>
    <content><![CDATA[<h1 id="初音ミク16岁生日快乐！！！"><a href="#初音ミク16岁生日快乐！！！" class="headerlink" title="初音ミク16岁生日快乐！！！"></a>初音ミク16岁生日快乐！！！</h1><h1 id="同时纪念少女的小站正式建成"><a href="#同时纪念少女的小站正式建成" class="headerlink" title="同时纪念少女的小站正式建成"></a>同时纪念少女的小站正式建成</h1><h1 id="2023-08-31-00-00-JST"><a href="#2023-08-31-00-00-JST" class="headerlink" title="2023.08.31 00:00 (JST)"></a>2023.08.31 00:00 (JST)</h1><p>Hello, World!</p>
]]></content>
  </entry>
  <entry>
    <title>为Hexo-Fluid的文章设置网格背景</title>
    <url>/2023/10/14/%E4%B8%BAHexo-Fluid%E7%9A%84%E6%96%87%E7%AB%A0%E8%AE%BE%E7%BD%AE%E7%BD%91%E6%A0%BC%E8%83%8C%E6%99%AF/</url>
    <content><![CDATA[<p>效果图：<br><img src="/img/20231014/xiaoguo.png" alt="效果图"><br>两种方法，推荐第一种</p>
<h2 id="使用自定义CSS实现"><a href="#使用自定义CSS实现" class="headerlink" title="使用自定义CSS实现"></a>使用自定义CSS实现</h2><ul>
<li><del>代码是从<a href="https://gridzzly.com/">Gridzzly.com</a>抄的</del>  </li>
<li>推荐为暗色模式进行适配 <del>不然根本看不清</del></li>
</ul>
<ol>
<li><p>新建CSS文件(不要通过自定义CSS导入)</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#board</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%226mm%22%20height%3D%226mm%22%20viewPort%3D%220%200%205mm%205mm%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%20%3Cline%20x1%3D%220mm%22%20y1%3D%225mm%22%20x2%3D%226mm%22%20y2%3D%225mm%22%20stroke-width%3D%220.3mm%22%20stroke%3D%22%23d4d4d4%22%2F%3E%20%3Cline%20x1%3D%225mm%22%20y1%3D%220mm%22%20x2%3D%225mm%22%20y2%3D%226mm%22%20stroke-width%3D%220.3mm%22%20stroke%3D%22%23d4d4d4%22%2F%3E%20%3C%2Fsvg%3E&quot;</span>);</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">2px</span> <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>引入CSS  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">id</span>=<span class="string">&quot;custom-css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/divback.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>建议通过Hexo注入器进行引入</p>
</li>
<li><p>修改<code>Blog\themes\fluid\layout\_partials\header\navigation.ejs</code> 目前是第62行，为了给a标签绑定<code>onclick=&quot;toggleCSS()&quot;</code></p>
<figure class="highlight html"><figcaption><span>navigation.ejs</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Color Toggle&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;toggleCSS()&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>导入自定义js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">toggleCSS</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> linkElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;custom-css&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (linkElement.<span class="property">disabled</span>) &#123;</span><br><span class="line">        linkElement.<span class="property">disabled</span> = <span class="literal">false</span>; <span class="comment">// 启用CSS文件</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        linkElement.<span class="property">disabled</span> = <span class="literal">true</span>; <span class="comment">// 禁用CSS文件</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="使用Pattern-css实现"><a href="#使用Pattern-css实现" class="headerlink" title="使用Pattern.css实现"></a>使用Pattern.css实现</h2><ol>
<li><p>在<code>layout.ejs</code>引入<code>Pattern.css</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/pattern.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>将<code>layout.ejs</code>和<code>post.ejs</code>两个文件中的<code>&lt;div id=&quot;board&quot;</code>(没有向右的尖括号)改为<code>&lt;div id=&quot;board&quot; class=&quot;pattern-dots-xl&quot;</code>(以.pattern-dots-xl为例，可以自己修改class的内容)</p>
</li>
</ol>
]]></content>
      <categories>
        <category>资源</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo ParticleX添加Valine评论</title>
    <url>/2024/01/21/Hexo-ParticleX%E6%B7%BB%E5%8A%A0Valine%E8%AF%84%E8%AE%BA/</url>
    <content><![CDATA[<ol>
<li>在<code>themes\particlex\layout\comment.ejs</code>的最后添加以下代码：(可使用CDN)</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;% if (theme.valine.enable) &#123; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/valine/1.5.1/Valine.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Valine</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 请使用你自己的设置</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#vcomments&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">appId</span>: <span class="string">&#x27;&lt;%- theme.valine.appId %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">appKey</span>: <span class="string">&#x27;&lt;%- theme.valine.appKey %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">avatar</span>: <span class="string">&#x27;mp&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">path</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">serverURLs</span>: <span class="string">&#x27;&lt;%- theme.valine.serverURLs %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>从<code>themes\particlex\layout\post.ejs</code>的倒数第三行开始加入以下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;% if (theme.valine.enable) &#123; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;comment&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;vcomments&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>themes\particlex\_config.yml</code>加入Valine的配置项</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">appId:</span> <span class="comment"># 你的appId</span></span><br><span class="line">    <span class="attr">appKey:</span> <span class="comment"># 你的appKey</span></span><br><span class="line">    <span class="attr">serverURLs:</span> <span class="comment"># 你的serverURLs</span></span><br></pre></td></tr></table></figure></li>
</ol>
<p>所以ParticleX为什么不支持Valine<br>高亮好像不支持ejs所以代码块上写的html</p>
]]></content>
      <categories>
        <category>资源</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo ParticleX及Diaspora主题使用Artitalk</title>
    <url>/2024/02/02/Hexo-ParticleX%E5%8F%8ADiaspora%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8Artitalk/</url>
    <content><![CDATA[<p><code>Hexo Particle</code>X和<code>Hexo Diaspora</code>主题，如果使用<code>hexo new page &lt;页面名&gt; </code>，并在生成的<code>.md</code>文件配置Artitalk的代码，会出现奇怪的Bug</p>
<p>请教ChatGPT之后用下面的代码可以使用Artitalk</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 找到class为content的div标签</span></span><br><span class="line">    <span class="keyword">var</span> contentDiv = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.content&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动态创建div标签用于Artitalk</span></span><br><span class="line">    <span class="keyword">var</span> artitalkDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    artitalkDiv.<span class="property">id</span> = <span class="string">&#x27;artitalk_main&#x27;</span>; <span class="comment">// 设置ID为artitalk_main</span></span><br><span class="line">    contentDiv.<span class="title function_">appendChild</span>(artitalkDiv); <span class="comment">// 将新创建的div添加到class为content的div内</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建script标签</span></span><br><span class="line">    <span class="keyword">var</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    script.<span class="property">type</span> = <span class="string">&#x27;text/javascript&#x27;</span>;</span><br><span class="line">    script.<span class="property">src</span> = <span class="string">&#x27;https://cdn.staticfile.org/artitalk/3.3.4/js/artitalk.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当脚本加载完成后初始化Artitalk</span></span><br><span class="line">    script.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 确保Artitalk已加载</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">Artitalk</span> !== <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Artitalk</span>(&#123;</span><br><span class="line">          <span class="attr">appId</span>: <span class="string">&#x27;你的appId&#x27;</span>,</span><br><span class="line">          <span class="attr">appKey</span>: <span class="string">&#x27;你的appKey&#x27;</span>,</span><br><span class="line">          <span class="attr">serverURL</span>: <span class="string">&#x27;你的serverURL&#x27;</span>,</span><br><span class="line">          <span class="attr">color1</span>: <span class="string">&#x27;#8DC9D3&#x27;</span>,</span><br><span class="line">          <span class="attr">color2</span>: <span class="string">&#x27;#FFBFD7&#x27;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将script标签添加到body中（也可以根据需要添加到head中）</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>把这些添加进生成的<code>index.md</code>文件中</p>
<p>这里是把Artitalk添加进<code>&lt;div class=&quot;content&quot;&gt;</code>内，可以根据需要改变class名</p>
<p>在Diaspora主题上有Bug，需要刷新页面才能显示Artitalk，暂时没想到怎么解决</p>
]]></content>
      <categories>
        <category>资源</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>少女的人设</title>
    <url>/2023/11/05/%E5%B0%91%E5%A5%B3%E7%9A%84%E4%BA%BA%E8%AE%BE/</url>
    <content><![CDATA[<ul>
<li>姓名: 少女  </li>
<li>性别: 女  </li>
<li>年龄: 16  </li>
<li>身高: 159.5cm  </li>
<li>体重: <span class="heimu">女孩子的体重是秘密!!</span>  </li>
<li>胸围: 95D  </li>
<li>生日: 2007.08.31  </li>
<li>喜欢的人&#x2F;物: 初音未来&amp;&amp;美少女&amp;&amp;Python  <div style="text-align:center;"><p><del>才，才不是为了你才特意写的自我介绍啦</del></p><p><strong>世界第一可爱美少女</strong></p></div></li>
</ul>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>女生</tag>
        <tag>人设</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Github Actions自动切换网站主题</title>
    <url>/2024/01/21/%E4%BD%BF%E7%94%A8Github-Actions%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2%E7%BD%91%E7%AB%99%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<blockquote>
<p>现在网站用了六套主题，可喜可贺</p>
</blockquote>
<p>使用<code>Github Actions</code>实现每天自动切换网站的主题</p>
<p>比如周一、三、五、七使用<code>theme-A</code>，二、四、六使用<code>theme-B</code></p>
<p>当然也可以添加<code>theme-C</code>、<code>theme-D</code>…</p>
<ol>
<li><p>在<code>用户名.github.io</code>仓库中有两个文件夹<code>theme-A/</code>和<code>theme-B/</code>，用于存放两套主题的静态文件</p>
</li>
<li><p>在GitHub的 Settings -&gt; Developer Settings -&gt; Personal access tokens -&gt; Tokens (classic) (<a href="https://github.com/settings/tokens/new">链接</a>)生成一个token，填写Note，勾选<code>repo</code>和<code>workflow</code>然后生成</p>
<p><img src="/img/20240121/token.png" alt="token"></p>
</li>
<li><p>在仓库的 Settings -&gt; Secrets and variables -&gt; Actions 添加刚才的token</p>
<p><img src="/img/20240121/secret.png" alt="secret"></p>
</li>
<li><p>在GitHub仓库中新建<code>.github/workflows</code>，新建一个<code>.yaml</code>文件，文件名随意；可以先点<code>Run workflow</code>把静态文件部署到<code>gh-pages</code>分支</p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Update</span> <span class="string">Blog</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&quot;0 2 * * *&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">update:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">code</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v4</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Determine</span> <span class="string">Deployment</span> <span class="string">Directory</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">determine_directory</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          day_of_week=$(date +&#x27;%u&#x27;)</span></span><br><span class="line"><span class="string">          if [ $((day_of_week % 2)) -eq 0 ]; then</span></span><br><span class="line"><span class="string">          echo &quot;::set-output name=directory::theme-B/&quot;</span></span><br><span class="line"><span class="string">            else</span></span><br><span class="line"><span class="string">          echo &quot;::set-output name=directory::theme-A/&quot;</span></span><br><span class="line"><span class="string">          fi</span></span><br><span class="line"><span class="string"></span>          </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Get</span> <span class="string">Current</span> <span class="string">Time</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">current_time</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;::set-output name=time::$(date +&#x27;%Y-%m-%d %H:%M:%S&#x27;)&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3.9.3</span> <span class="comment"># 使用部署到 GitHub pages 的 action</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">$&#123;&#123;</span> <span class="string">steps.determine_directory.outputs.directory</span> <span class="string">&#125;&#125;</span> </span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_SECRET</span> <span class="string">&#125;&#125;</span> <span class="comment"># secret 名</span></span><br><span class="line">          <span class="attr">user_name:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.MY_USER_NAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">user_email:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.MY_USER_EMAIL</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">commit_message:</span> <span class="string">&quot;Automated Deployment at $<span class="template-variable">&#123;&#123; steps.current_time.outputs.time &#125;&#125;</span>&quot;</span> <span class="comment"># 在 commit message 中添加当前时间</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>在仓库的 Settings -&gt; Pages 设置<code>Build and deployment</code>的<code>Source</code>为<code>Deploy from a branch</code>，选择<code>gh-pages</code>分支，此时GitHub Pages将开始部署</li>
</ol>
<p><del>总之就挺神经病的</del></p>
<p><del>写的方法我自己都看不懂</del></p>
<p><del>感谢ChatGPT提供的GitHub Actions的源码</del></p>
]]></content>
      <categories>
        <category>资源</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>资源</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>姐姐♡喜欢</title>
    <url>/2023/11/26/%E5%A7%90%E5%A7%90%E2%99%A1%E5%96%9C%E6%AC%A2/</url>
    <content><![CDATA[<p>好喜欢姐姐  </p>
<p>想给姐姐生孩子  </p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>女生</tag>
      </tags>
  </entry>
  <entry>
    <title>想穿Lolita</title>
    <url>/2023/10/26/%E6%83%B3%E7%A9%BFLolita/</url>
    <content><![CDATA[<p>我想穿lolita<br>但是lolita好贵 买不起</p>
<p>我不穿lolita也很可爱</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>女生</tag>
      </tags>
  </entry>
  <entry>
    <title>我想变成女生</title>
    <url>/2023/10/05/%E6%88%91%E6%83%B3%E5%8F%98%E6%88%90%E5%A5%B3%E7%94%9F/</url>
    <content><![CDATA[<h1 id="我想变成女生"><a href="#我想变成女生" class="headerlink" title="我想变成女生"></a>我想变成女生</h1><p>好想变成女生</p>
<p>变成女生会很可爱</p>
<p>为什么我不是女生，可恶</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>女生</tag>
      </tags>
  </entry>
  <entry>
    <title>谁能帮我找个女朋友</title>
    <url>/2023/10/14/%E8%B0%81%E8%83%BD%E5%B8%AE%E6%88%91%E6%89%BE%E4%B8%AA%E5%A5%B3%E6%9C%8B%E5%8F%8B/</url>
    <content><![CDATA[<p>谁能帮我找个女朋友<br>要高中大姐姐</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>女生</tag>
      </tags>
  </entry>
  <entry>
    <title>生日快乐</title>
    <url>/2023/12/15/%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/</url>
    <content><![CDATA[<p>生日快乐，我的15岁</p>
<p>许个愿——当然不能说出来啦！</p>
<p><code>12/15/2023</code></p>
<p><img src="/img/myicon.jpg" alt="birthday"></p>
]]></content>
      <tags>
        <tag>birthday</tag>
      </tags>
  </entry>
  <entry>
    <title>配置Hexo-Fluid及Valine时遇到的问题</title>
    <url>/2023/10/05/%E9%85%8D%E7%BD%AEHexo-Fluid%E5%8F%8AValine%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>一些小问题</p>
<h2 id="关于Hexo-Fluid的评论"><a href="#关于Hexo-Fluid的评论" class="headerlink" title="关于Hexo Fluid的评论"></a>关于Hexo Fluid的评论</h2><p>因为出了一点Bug，本站的评论通过修改<code>Blog/themes/fluid/layout/post.ejs</code>实现。<br>将<code>post.ejs</code>中的<code>&lt;%- inject_point(&#39;postComments&#39;) %&gt;</code>替换为 你使用的评论系统 提供的html代码<br>以Utterance为例:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://utteranc.es/client.js&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">repo</span>=<span class="string">&quot;用户名/仓库地址&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">issue-term</span>=<span class="string">&quot;pathname&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">theme</span>=<span class="string">&quot;github-light&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">async</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="关于网站图标"><a href="#关于网站图标" class="headerlink" title="关于网站图标"></a>关于网站图标</h2><p>在<code>_config.fluid.yml</code>设置没反应，手动将网页图标重命名为<code>favicon.ico</code>，复制到<code>public</code>文件夹下</p>
<h2 id="关于Valine"><a href="#关于Valine" class="headerlink" title="关于Valine"></a>关于Valine</h2><p>测试时发现LeanCloud提供的域名会屏蔽中国大陆的访问…<br>绑定自己的域名后就能正常访问…  </p>
<p>在LeanCloud的<code>设置-域名绑定</code>选项绑定自己的子域名，然后在子域名的DNS上设置<code>CNAME</code>记录，解析到LeanCloud提供的域名，之后配置Valine时,使用绑定的子域名  </p>
<p><del>不想打字了</del></p>
]]></content>
      <categories>
        <category>资源</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>fluid</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>魔改Hexo Fluid</title>
    <url>/2023/10/05/%E9%AD%94%E6%94%B9Hexo-Fluid/</url>
    <content><![CDATA[<p>整理一下本少女在使用hexo fluid时用到的代码  </p>
<h2 id="视频Banner"><a href="#视频Banner" class="headerlink" title="视频Banner"></a>视频Banner</h2><p>将<code>themes/fluid/layout/_partials/header/banner.ejs</code>修改为以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">var banner_img = page.banner_img || theme.index.banner_img</span><br><span class="line">var banner_img_height = parseFloat(page.banner_img_height || theme.index.banner_img_height)</span><br><span class="line">var banner_mask_alpha = parseFloat(page.banner_mask_alpha || theme.index.banner_mask_alpha)</span><br><span class="line">var subtitle = page.subtitle || page.title</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;banner&quot; class=&quot;banner&quot; style=&quot;background: url(&#x27;&lt;%- url_for(banner_img) %&gt;&#x27;) no-repeat center center; background-size: cover;&quot;&gt;</span><br><span class="line">  &lt;video autoplay loop muted playsinline poster=&quot;&lt;%- url_for(banner_img) %&gt;&quot;</span><br><span class="line">         style=&quot;position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;&quot;&gt;</span><br><span class="line">    &lt;source src=&quot;[你的视频背景地址]&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class="line">  &lt;/video&gt;</span><br><span class="line">  &lt;div class=&quot;full-bg-img&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;mask flex-center&quot; style=&quot;background-color: rgba(0, 0, 0, &lt;%= parseFloat(banner_mask_alpha) %&gt;)&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;banner-text text-center fade-in-up&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;h2&quot;&gt;</span><br><span class="line">          &lt;% if(theme.fun_features.typing.enable &amp;&amp; in_scope(theme.fun_features.typing.scope)) &#123; %&gt;</span><br><span class="line">            &lt;span id=&quot;subtitle&quot; data-typed-text=&quot;&lt;%= subtitle %&gt;&quot;&gt;&lt;/span&gt;</span><br><span class="line">          &lt;% &#125; else &#123; %&gt;</span><br><span class="line">            &lt;span id=&quot;subtitle&quot;&gt;&lt;%- subtitle %&gt;&lt;/span&gt;</span><br><span class="line">          &lt;% &#125; %&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;% if (is_post()) &#123; %&gt;</span><br><span class="line">          &lt;%- inject_point(&#x27;postMetaTop&#x27;) %&gt;</span><br><span class="line">        &lt;% &#125; %&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;% if (theme.scroll_down_arrow.enable &amp;&amp; theme.scroll_down_arrow.banner_height_limit &lt;= banner_img_height &amp;&amp; page.layout !== &#x27;404&#x27;) &#123; %&gt;</span><br><span class="line">        &lt;div class=&quot;scroll-down-bar&quot;&gt;</span><br><span class="line">          &lt;i class=&quot;iconfont icon-arrowdown&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="添加自定义字体"><a href="#添加自定义字体" class="headerlink" title="添加自定义字体"></a>添加自定义字体</h2><ol>
<li>通过自定义CSS引入字体</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;FontName&#x27;</span>;  <span class="comment">/*换成你自己的字体名及路径*/</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;/font/font.ttf&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;truetype&#x27;</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>修改<code>Blog/_config.fluid.yml</code></li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">font_size:</span> <span class="string">18px</span>   <span class="comment"># 按需要自定义</span></span><br><span class="line">  <span class="attr">font_family:</span> <span class="string">FontName</span>  <span class="comment"># 换成你自己的字体名</span></span><br><span class="line">  <span class="attr">letter_spacing:</span> <span class="number">0.</span><span class="string">02em</span></span><br><span class="line">  <span class="attr">code_font_size:</span> <span class="number">85</span><span class="string">%</span></span><br></pre></td></tr></table></figure>

<h2 id="添加网页背景图片"><a href="#添加网页背景图片" class="headerlink" title="添加网页背景图片"></a>添加网页背景图片</h2><ol>
<li>使用自定义CSS实现<br>用上面的方法添加自定义CSS<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">/img/background.jpg</span>);  <span class="comment">/*换成你自己的背景图*/</span></span><br><span class="line">  <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">  <span class="attribute">background-size</span>: cover;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
可以使用图片的api，个人感觉会拖慢加载速度</li>
</ol>
<h2 id="复制变色"><a href="#复制变色" class="headerlink" title="复制变色"></a>复制变色</h2><p>自定义CSS添加以下内容  </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#66ccff</span>; <span class="comment">/* 设置选中文字的颜色 */</span></span><br><span class="line">    <span class="attribute">background</span>: transparent; <span class="comment">/* 设置选中文字的背景为透明 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Banner图随网页滑动变透明"><a href="#Banner图随网页滑动变透明" class="headerlink" title="Banner图随网页滑动变透明"></a>Banner图随网页滑动变透明</h2><p>Hexo Fluid，随着网页的滑动，Banner图会逐渐变透明<br>打字机也会变透明  </p>
<p>自定义js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取图片元素</span></span><br><span class="line"><span class="keyword">var</span> image = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;banner&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> targetDistance = <span class="number">695</span>; <span class="comment">// 设置滑动695px后完全透明</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;scroll&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> scrollDistance = <span class="variable language_">window</span>.<span class="property">pageYOffset</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span> || <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> opacity = <span class="number">1</span> - (scrollDistance / targetDistance);</span><br><span class="line">  <span class="keyword">if</span>(opacity &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    opacity = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  image.<span class="property">style</span>.<span class="property">opacity</span> = opacity.<span class="title function_">toString</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>或者根据滑动网页的百分比减少不透明度</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> image = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;banner&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> pageHeight = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollHeight</span> - <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;scroll&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> scrollDistance = <span class="variable language_">window</span>.<span class="property">pageYOffset</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span> || <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> opacity = <span class="number">1</span> - (scrollDistance / pageHeight);</span><br><span class="line">  <span class="keyword">if</span>(opacity &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    opacity = <span class="number">0</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(opacity &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    opacity = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  image.<span class="property">style</span>.<span class="property">opacity</span> = opacity.<span class="title function_">toString</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>设置banner的淡出样式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#banner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文章中代码的字体及背景色"><a href="#文章中代码的字体及背景色" class="headerlink" title="文章中代码的字体及背景色"></a>文章中代码的字体及背景色</h2><p>自定义CSS添加以下内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.markdown-body</span> <span class="selector-tag">code</span> &#123;</span><br><span class="line">    <span class="attribute">tab-size</span>: <span class="number">4</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">251</span> <span class="number">253</span> <span class="number">83</span> / <span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">transition</span>: background-color <span class="number">0.2s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;FontName&quot;</span>;  <span class="comment">/*改为你自己的字体名*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>background-color</code>用于设置背景色</li>
<li><code>font-family</code>用于设置字体</li>
</ul>
<h2 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h2><p>自定义CSS</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e58a8a</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>( <span class="number">45deg</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">25%</span>, transparent <span class="number">25%</span>, transparent <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">50%</span>, <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">75%</span>, transparent <span class="number">75%</span>, transparent);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e58a8a</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>先写这些~</p>
]]></content>
      <categories>
        <category>资源</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>fluid</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Cloudflare Pages搭建图床</title>
    <url>/2024/02/08/%E4%BD%BF%E7%94%A8Cloudflare-Pages%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<p>使用<code>Cloudflare Pages</code>搭建图床</p>
<p>除了图床也可以放各种各样的文件</p>
<p>限制：</p>
<ul>
<li><p>自定义域最多100个</p>
</li>
<li><p>每月最多部署500次</p>
</li>
<li><p>每个<code>Cloudflare Pages</code>最多20000个文件，单个文件最大<code>25 MiB</code></p>
</li>
</ul>
<p>新建Git仓库，上传你的文件；在仓库根目录中新建一个<code>_headers</code>文件，内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">  Access-Control-Allow-Origin: *</span><br></pre></td></tr></table></figure>

<p>最好把<code>Access-Control-Allow-Origin: *</code>中的<code>*</code>替换为你的网站URL</p>
<p>不替换就是所有人都能跨域访问</p>
<p>然后把这个仓库部署到<code>Cloudflare Pages</code></p>
<hr>
<p>后来发现可以在<code>/functions</code>目录下配置<code>Cloudflare Workers</code>，也可以使用<code>_worker.js</code>文件，如果只允许几个特定的网站共用一个图床，理论上能够实现；但是 ChatGPT 的方案<strong>有问题</strong>，自己也不怎么会JavaScript，遂将代码抄录如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">fetch</span>(<span class="params">request, env</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(request); <span class="comment">// 默认转发请求</span></span><br><span class="line">    <span class="keyword">const</span> origin = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Origin&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> allowedOrigins = [</span><br><span class="line">      <span class="comment">// 在这里添加其他允许的来源</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查请求的Origin是否在允许的列表中</span></span><br><span class="line">    <span class="keyword">if</span> (allowedOrigins.<span class="title function_">includes</span>(origin)) &#123;</span><br><span class="line">      <span class="comment">// 允许列表中的源，创建新的响应头并设置CORS策略</span></span><br><span class="line">      <span class="keyword">const</span> newHeaders = <span class="keyword">new</span> <span class="title class_">Headers</span>(response.<span class="property">headers</span>);</span><br><span class="line">      newHeaders.<span class="title function_">set</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, origin);</span><br><span class="line">      newHeaders.<span class="title function_">set</span>(<span class="string">&quot;Vary&quot;</span>, <span class="string">&quot;Origin&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 返回新的响应对象</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(response.<span class="property">body</span>, &#123;</span><br><span class="line">        <span class="attr">status</span>: response.<span class="property">status</span>,</span><br><span class="line">        <span class="attr">statusText</span>: response.<span class="property">statusText</span>,</span><br><span class="line">        <span class="attr">headers</span>: newHeaders</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果请求的Origin不在允许列表中，返回原始响应</span></span><br><span class="line">    <span class="comment">// 这里不设置Access-Control-Allow-Origin头</span></span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><del>\\又水了一篇好开心\\</del></p>
]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>资源</tag>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
</search>
